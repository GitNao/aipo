#
# Aipo is a groupware program developed by Aimluck,Inc.
# Copyright (C) 2004-2010 Aimluck,Inc.
# http://aipostyle.com/
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

log4j.rootLogger = ERROR, jetspeed
log4j.debug = false

#
# Aimluck Logging Setting
#
log4j.category.com.aimluck = ERROR, aimluck
log4j.additiviry.com.aimluck = false

#
# Cayenne Logging Setting
#
log4j.category.org.apache.cayenne = ERROR, cayenne
log4j.additiviry.org.apache.cayenne = false


#
# Jetspeed goes into Jetspeed Log
#
log4j.category.org.apache.jetspeed = ERROR, jetspeed
log4j.additivity.org.apache.jetspeed = false

#
# Jetspeed services goes into Jetspeed Services Log
#
log4j.category.org.apache.jetspeed.services = ERROR, jetspeedsrv
log4j.additivity.org.apache.jetspeed.services = false
log4j.category.org.apache.jetspeed.services.psmlmanager.CastorPsmlManagerService = ERROR, jetspeedsrv
log4j.additivity.org.apache.jetspeed.services.psmlmanager.CastorPsmlManagerService = false

#
# Turbine goes into Turbine Log
# JetspeedLoggingService handles all logging thru TurbineLoggingService
#
log4j.category.org.apache.jetspeed.services.logging.JetspeedLoggingService = ERROR, turbine
log4j.additivity.org.apache.jetspeed.services.logging.JetspeedLoggingService = false

#
# Portlet access Category
#
log4j.category.org.apache.jetspeed.services.portletstats.JetspeedPortletStatsService = ERROR, access
log4j.additivity.org.apache.jetspeed.services.portletstats.JetspeedPortletStatsService = false

#
# Console output Category
#
log4j.category.stdout = ERROR, stdout
log4j.additivity.stdout = false

########################################################################
#
# Logfile definitions
#
########################################################################

#
# jetspeed.log
#
log4j.appender.jetspeed = org.apache.log4j.RollingFileAppender
log4j.appender.jetspeed.MaxFileSize = 1000KB
log4j.appender.jetspeed.MaxBackupIndex = 30
log4j.appender.jetspeed.file = ${webappRoot}/WEB-INF/logs/jetspeed.log
log4j.appender.jetspeed.layout = org.apache.log4j.PatternLayout
log4j.appender.jetspeed.layout.conversionPattern = [%d{yyyy/MMM/dd HH:mm:ss} %5p] - %m%n
log4j.appender.jetspeed.append = true

log4j.appender.jetspeedsrv = org.apache.log4j.RollingFileAppender
log4j.appender.jetspeedsrv.MaxFileSize = 1000KB
log4j.appender.jetspeedsrv.MaxBackupIndex = 30
log4j.appender.jetspeedsrv.file = ${webappRoot}/WEB-INF/logs/jetspeedservices.log
log4j.appender.jetspeedsrv.layout = org.apache.log4j.PatternLayout
log4j.appender.jetspeedsrv.layout.conversionPattern = [%d{yyyy/MMM/dd HH:mm:ss} %5p] - %m%n
log4j.appender.jetspeedsrv.append = true

#
# turbine.log
#
log4j.appender.turbine = org.apache.log4j.RollingFileAppender
log4j.appender.turbine.MaxFileSize = 1000KB
log4j.appender.turbine.MaxBackupIndex = 30
log4j.appender.turbine.file = ${webappRoot}/WEB-INF/logs/turbine.log
log4j.appender.turbine.layout = org.apache.log4j.PatternLayout
log4j.appender.turbine.layout.conversionPattern = [%d{yyyy/MMM/dd HH:mm:ss} %5p] - %m%n
log4j.appender.turbine.append = true

#
# Portlet access Output
#
log4j.appender.access = org.apache.log4j.RollingFileAppender
log4j.appender.access.MaxFileSize = 1000KB
log4j.appender.access.MaxBackupIndex = 30
log4j.appender.access.file = ${webappRoot}/WEB-INF/logs/access.log
log4j.appender.access.layout = org.apache.log4j.PatternLayout
log4j.appender.access.layout.conversionPattern = [%d{yyyy/MMM/dd HH:mm:ss} %5p] - %m%n
log4j.appender.access.append = true

#
# Console Output
#
log4j.appender.stdout = org.apache.log4j.RollingFileAppender
log4j.appender.stdout.MaxFileSize = 1000KB
log4j.appender.stdout.MaxBackupIndex = 30
log4j.appender.stdout.file = ${webappRoot}/WEB-INF/logs/stdout.log
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.aimluck.layout.conversionPattern = [%d{yyyy/MMM/dd HH:mm:ss} %5p] - %m%n
log4j.appender.stdout.append = true

#
# Aimluck EIP Log Console Output
#
log4j.appender.aimluck = org.apache.log4j.RollingFileAppender
log4j.appender.aimluck.MaxFileSize = 1000KB
log4j.appender.aimluck.MaxBackupIndex = 30
log4j.appender.aimluck.file = ${webappRoot}/WEB-INF/logs/aipo.log
log4j.appender.aimluck.layout = org.apache.log4j.PatternLayout
log4j.appender.aimluck.layout.conversionPattern = [%d{yyyy/MMM/dd HH:mm:ss} %5p] - %m%n
log4j.appender.aimluck.append = true


#
# Cayenne Log Console Output
#
log4j.appender.cayenne = org.apache.log4j.RollingFileAppender
log4j.appender.cayenne.MaxFileSize = 1000KB
log4j.appender.cayenne.MaxBackupIndex = 30
log4j.appender.cayenne.file = ${webappRoot}/WEB-INF/logs/cayenne.log
log4j.appender.cayenne.layout = org.apache.log4j.PatternLayout
log4j.appender.cayenne.layout.conversionPattern = [%d{yyyy/MMM/dd HH:mm:ss} %5p] - %m%n
log4j.appender.cayenne.append = true